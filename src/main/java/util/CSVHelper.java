package util;

import java.io.*;
import Models.Product;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

public class CSVHelper {

    private static final String REPORT_DIR = "reports/";

    public static String generateProductsReport(List<Product> products, String generatedBy) {
        try {
            File dir = new File(REPORT_DIR);
            if (!dir.exists()) dir.mkdirs();

            String fileName = REPORT_DIR + "inventory_report_" +
                    new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date()) + ".csv";

            try (PrintWriter writer = new PrintWriter(new FileWriter(fileName))) {
                writer.println("-------------- Inventory Report ---------------");
                writer.println("Generated By: " + generatedBy);
                writer.println("Generated At: " + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));
                writer.println();
                writer.println("ID,Name,Category,Quantity,Price");

                if (products != null && !products.isEmpty()) {
                    for (Product p : products) {
                        writer.println(p.getProductId() + "," + p.getProductName() + "," +
                                p.getProductType() + "," + p.getAvailableQty() + "," +
                                p.getPrice());
                    }
                } else {
                    writer.println("⚠️ No products available.");
                }

                writer.println();
                writer.println("Total Products: " + (products != null ? products.size() : 0));
                System.out.println("✅ Report saved successfully: " + fileName);
                return fileName;
            }
        } catch (IOException e) {
                System.out.println("❌ Error writing report: " + e.getMessage());
            }

            return null; // Return null if there was an error
        }


        public static List<Product> loadProducts () {
            List<Product> products = new java.util.ArrayList<>();
            File file = new File("products.csv");

            if (!file.exists()) {
                System.out.println("⚠️ File not found: " + file.getAbsolutePath());
                return products;
            }

            try (BufferedReader br = new BufferedReader(new FileReader(file))) {
                String line;
                boolean isFirstLine = true;

                while ((line = br.readLine()) != null) {
                    if (isFirstLine) {
                        isFirstLine = false;
                        continue;
                    }

                    String[] data = line.split(",");
                    if (data.length == 5) {
                        Product product = new Product();
                        product.setProductId(Integer.parseInt(data[0].trim()));
                        product.setProductName(data[1].trim());
                        product.setProductType(data[2].trim());
                        product.setAvailableQty(Integer.parseInt(data[3].trim()));
                        product.setPrice(Double.parseDouble(data[4].trim()));
                        products.add(product);
                    }
                }
            } catch (IOException e) {
                System.out.println("❌ Error reading products: " + e.getMessage());
            }

            return products;
        }
    }
